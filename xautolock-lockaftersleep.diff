--- xautolock-2.2/include/options.h	2007-10-01 01:30:29.000000000 +0400
+++ xautolock-2.2/include/options.h	2011-11-29 19:32:22.359333316 +0400
@@ -52,7 +52,7 @@
 extern int          bellPercent;
 extern unsigned     cornerSize;
 extern Bool         secure, notifyLock, useRedelay, resetSaver, 
-                    noCloseOut, noCloseErr, detectSleep;
+                    noCloseOut, noCloseErr, detectSleep, lockAfterSleep;
 extern cornerAction corners[4];
 extern message      messageToSend; 
 
--- xautolock-2.2/src/options.c	2007-10-01 01:30:45.000000000 +0400
+++ xautolock-2.2/src/options.c	2011-11-29 20:16:58.548086278 +0400
@@ -52,6 +52,7 @@
 Bool         detectSleep = False;        /* whether to reset the timers
 					    after a (laptop) sleep, 
 					    i.e. after a big time jump  */
+Bool         lockAfterSleep = False;
 
 #ifdef VMS
 struct dsc$descriptor lockerDescr;       /* used to fire up the locker  */
@@ -231,6 +232,7 @@
 BOOL_ACTION (noCloseOut)
 BOOL_ACTION (noCloseErr)
 BOOL_ACTION (detectSleep)
+BOOL_ACTION (lockAfterSleep)
 
 static Bool
 noCloseAction (Display* d, const char* arg)
@@ -535,6 +537,8 @@
     noCloseErrAction   , (optChecker) 0            },
   {"detectsleep"       , XrmoptionNoArg , (caddr_t) "",
     detectSleepAction  , (optChecker) 0            },
+  {"lockaftersleep"       , XrmoptionNoArg , (caddr_t) "",
+    lockAfterSleepAction  , (optChecker) 0            },
 }; /* as it says, the order is important! */
 
 /*
@@ -566,7 +570,7 @@
   error1 ("%s[-nocloseout][-nocloseerr][-noclose]\n", blanks);
   error1 ("%s[-enable][-disable][-toggle][-exit][-secure]\n", blanks);
   error1 ("%s[-locknow][-unlocknow][-nowlocker locker]\n", blanks);
-  error1 ("%s[-restart][-resetsaver][-detectsleep]\n", blanks);
+  error1 ("%s[-restart][-resetsaver][-detectsleep][-lockaftersleep]\n", blanks);
 
   error0 ("\n");
   error0 (" -help               : print this message and exit.\n");
@@ -602,6 +606,7 @@
   error0 (" -resetsaver         : reset the screensaver when starting "
                                   "the locker.\n");
   error0 (" -detectsleep        : reset timers when awaking from sleep.\n");
+  error0 (" -lockaftersleep     : lock immediately after awakening from sleep.\n");
 
   error0 ("\n");
   error0 ("Defaults :\n");
--- xautolock-2.2/src/xautolock.c	2007-10-01 01:30:50.000000000 +0400
+++ xautolock-2.2/src/xautolock.c	2011-11-29 19:31:14.239702353 +0400
@@ -165,6 +165,14 @@
       if ((unsigned long) t1 - (unsigned long) t0 > 3) resetLockTrigger ();
       t0 = t1;
     }
+
+    if (lockAfterSleep)
+    {
+      t1 = time (NULL);
+      if ((unsigned long) t1 - (unsigned long) t0 > 3) lockNow = True;
+      t0 = t1;
+    }
+
   }
 
   return 0; /* Never reached! */
--- xautolock-2.2/xautolock.man	2007-12-28 20:05:40.000000000 +0300
+++ xautolock-2.2/xautolock.man	2011-11-29 21:07:58.208177342 +0400
@@ -23,7 +23,7 @@
 [\fB\-nocloseout\fR] [\fB\-nocloseerr\fR] [\fB\-noclose\fR]
 [\fB\-disable\fR] [\fB\-enable\fR] [\fB\-toggle\fR] [\fB\-exit\fR]
 [\fB\-locknow\fR] [\fB\-unlocknow\fR] [\fB\-nowlocker\fR \fIlocker\fR]
-[\fB\-restart\fR] [\fB\-detectsleep\fR]
+[\fB\-restart\fR] [\fB\-detectsleep\fR] [\fB-lockaftersleep\fR]
 
 .SH DESCRIPTION 
 Xautolock monitors the user activity on an X Window display. If none is
@@ -214,6 +214,9 @@
 typically used to avoid locker program to be launched when awaking a 
 laptop computer.
 .TP 
+\fB-lockaftersleep\fR
+Lock immediately after awakening from sleep.
+.TP
 \fB\-secure\fR
 Instructs xautolock to run in secure mode. In this mode, xautolock
 becomes imune to the effects of \fB\-enable\fR, \fB\-disable\fR, 
